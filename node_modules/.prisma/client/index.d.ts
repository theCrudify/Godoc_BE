
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model mst_product
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type mst_product = $Result.DefaultSelection<Prisma.$mst_productPayload>
/**
 * Model mst_user
 * 
 */
export type mst_user = $Result.DefaultSelection<Prisma.$mst_userPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const mst_user_role: {
  admin: 'admin',
  seller: 'seller',
  customer: 'customer'
};

export type mst_user_role = (typeof mst_user_role)[keyof typeof mst_user_role]


export const mst_user_status: {
  active: 'active',
  inactive: 'inactive',
  banned: 'banned'
};

export type mst_user_status = (typeof mst_user_status)[keyof typeof mst_user_status]

}

export type mst_user_role = $Enums.mst_user_role

export const mst_user_role: typeof $Enums.mst_user_role

export type mst_user_status = $Enums.mst_user_status

export const mst_user_status: typeof $Enums.mst_user_status

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Mst_products
 * const mst_products = await prisma.mst_product.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Mst_products
   * const mst_products = await prisma.mst_product.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs, $Utils.Call<Prisma.TypeMapCb, {
    extArgs: ExtArgs
  }>, ClientOptions>

      /**
   * `prisma.mst_product`: Exposes CRUD operations for the **mst_product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mst_products
    * const mst_products = await prisma.mst_product.findMany()
    * ```
    */
  get mst_product(): Prisma.mst_productDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mst_user`: Exposes CRUD operations for the **mst_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mst_users
    * const mst_users = await prisma.mst_user.findMany()
    * ```
    */
  get mst_user(): Prisma.mst_userDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.3.1
   * Query Engine version: acc0b9dd43eb689cbd20c9470515d719db10d0b0
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    mst_product: 'mst_product',
    mst_user: 'mst_user'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "mst_product" | "mst_user"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      mst_product: {
        payload: Prisma.$mst_productPayload<ExtArgs>
        fields: Prisma.mst_productFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mst_productFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_productPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mst_productFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_productPayload>
          }
          findFirst: {
            args: Prisma.mst_productFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_productPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mst_productFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_productPayload>
          }
          findMany: {
            args: Prisma.mst_productFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_productPayload>[]
          }
          create: {
            args: Prisma.mst_productCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_productPayload>
          }
          createMany: {
            args: Prisma.mst_productCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.mst_productDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_productPayload>
          }
          update: {
            args: Prisma.mst_productUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_productPayload>
          }
          deleteMany: {
            args: Prisma.mst_productDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mst_productUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.mst_productUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_productPayload>
          }
          aggregate: {
            args: Prisma.Mst_productAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMst_product>
          }
          groupBy: {
            args: Prisma.mst_productGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mst_productGroupByOutputType>[]
          }
          count: {
            args: Prisma.mst_productCountArgs<ExtArgs>
            result: $Utils.Optional<Mst_productCountAggregateOutputType> | number
          }
        }
      }
      mst_user: {
        payload: Prisma.$mst_userPayload<ExtArgs>
        fields: Prisma.mst_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mst_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mst_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_userPayload>
          }
          findFirst: {
            args: Prisma.mst_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mst_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_userPayload>
          }
          findMany: {
            args: Prisma.mst_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_userPayload>[]
          }
          create: {
            args: Prisma.mst_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_userPayload>
          }
          createMany: {
            args: Prisma.mst_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.mst_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_userPayload>
          }
          update: {
            args: Prisma.mst_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_userPayload>
          }
          deleteMany: {
            args: Prisma.mst_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mst_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.mst_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mst_userPayload>
          }
          aggregate: {
            args: Prisma.Mst_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMst_user>
          }
          groupBy: {
            args: Prisma.mst_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mst_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.mst_userCountArgs<ExtArgs>
            result: $Utils.Optional<Mst_userCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    mst_product?: mst_productOmit
    mst_user?: mst_userOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Mst_userCountOutputType
   */

  export type Mst_userCountOutputType = {
    mst_product: number
  }

  export type Mst_userCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mst_product?: boolean | Mst_userCountOutputTypeCountMst_productArgs
  }

  // Custom InputTypes
  /**
   * Mst_userCountOutputType without action
   */
  export type Mst_userCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_userCountOutputType
     */
    select?: Mst_userCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mst_userCountOutputType without action
   */
  export type Mst_userCountOutputTypeCountMst_productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mst_productWhereInput
  }


  /**
   * Models
   */

  /**
   * Model mst_product
   */

  export type AggregateMst_product = {
    _count: Mst_productCountAggregateOutputType | null
    _avg: Mst_productAvgAggregateOutputType | null
    _sum: Mst_productSumAggregateOutputType | null
    _min: Mst_productMinAggregateOutputType | null
    _max: Mst_productMaxAggregateOutputType | null
  }

  export type Mst_productAvgAggregateOutputType = {
    product_id: number | null
    price: Decimal | null
    stock: number | null
    created_by: number | null
  }

  export type Mst_productSumAggregateOutputType = {
    product_id: number | null
    price: Decimal | null
    stock: number | null
    created_by: number | null
  }

  export type Mst_productMinAggregateOutputType = {
    product_id: number | null
    product_name: string | null
    description: string | null
    price: Decimal | null
    stock: number | null
    category: string | null
    created_by: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Mst_productMaxAggregateOutputType = {
    product_id: number | null
    product_name: string | null
    description: string | null
    price: Decimal | null
    stock: number | null
    category: string | null
    created_by: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Mst_productCountAggregateOutputType = {
    product_id: number
    product_name: number
    description: number
    price: number
    stock: number
    category: number
    created_by: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Mst_productAvgAggregateInputType = {
    product_id?: true
    price?: true
    stock?: true
    created_by?: true
  }

  export type Mst_productSumAggregateInputType = {
    product_id?: true
    price?: true
    stock?: true
    created_by?: true
  }

  export type Mst_productMinAggregateInputType = {
    product_id?: true
    product_name?: true
    description?: true
    price?: true
    stock?: true
    category?: true
    created_by?: true
    created_at?: true
    updated_at?: true
  }

  export type Mst_productMaxAggregateInputType = {
    product_id?: true
    product_name?: true
    description?: true
    price?: true
    stock?: true
    category?: true
    created_by?: true
    created_at?: true
    updated_at?: true
  }

  export type Mst_productCountAggregateInputType = {
    product_id?: true
    product_name?: true
    description?: true
    price?: true
    stock?: true
    category?: true
    created_by?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Mst_productAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mst_product to aggregate.
     */
    where?: mst_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mst_products to fetch.
     */
    orderBy?: mst_productOrderByWithRelationInput | mst_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mst_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mst_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mst_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mst_products
    **/
    _count?: true | Mst_productCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mst_productAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mst_productSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mst_productMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mst_productMaxAggregateInputType
  }

  export type GetMst_productAggregateType<T extends Mst_productAggregateArgs> = {
        [P in keyof T & keyof AggregateMst_product]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMst_product[P]>
      : GetScalarType<T[P], AggregateMst_product[P]>
  }




  export type mst_productGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mst_productWhereInput
    orderBy?: mst_productOrderByWithAggregationInput | mst_productOrderByWithAggregationInput[]
    by: Mst_productScalarFieldEnum[] | Mst_productScalarFieldEnum
    having?: mst_productScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mst_productCountAggregateInputType | true
    _avg?: Mst_productAvgAggregateInputType
    _sum?: Mst_productSumAggregateInputType
    _min?: Mst_productMinAggregateInputType
    _max?: Mst_productMaxAggregateInputType
  }

  export type Mst_productGroupByOutputType = {
    product_id: number
    product_name: string
    description: string | null
    price: Decimal
    stock: number
    category: string | null
    created_by: number | null
    created_at: Date | null
    updated_at: Date | null
    _count: Mst_productCountAggregateOutputType | null
    _avg: Mst_productAvgAggregateOutputType | null
    _sum: Mst_productSumAggregateOutputType | null
    _min: Mst_productMinAggregateOutputType | null
    _max: Mst_productMaxAggregateOutputType | null
  }

  type GetMst_productGroupByPayload<T extends mst_productGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mst_productGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mst_productGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mst_productGroupByOutputType[P]>
            : GetScalarType<T[P], Mst_productGroupByOutputType[P]>
        }
      >
    >


  export type mst_productSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    product_id?: boolean
    product_name?: boolean
    description?: boolean
    price?: boolean
    stock?: boolean
    category?: boolean
    created_by?: boolean
    created_at?: boolean
    updated_at?: boolean
    mst_user?: boolean | mst_product$mst_userArgs<ExtArgs>
  }, ExtArgs["result"]["mst_product"]>



  export type mst_productSelectScalar = {
    product_id?: boolean
    product_name?: boolean
    description?: boolean
    price?: boolean
    stock?: boolean
    category?: boolean
    created_by?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type mst_productOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"product_id" | "product_name" | "description" | "price" | "stock" | "category" | "created_by" | "created_at" | "updated_at", ExtArgs["result"]["mst_product"]>
  export type mst_productInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mst_user?: boolean | mst_product$mst_userArgs<ExtArgs>
  }

  export type $mst_productPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mst_product"
    objects: {
      mst_user: Prisma.$mst_userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      product_id: number
      product_name: string
      description: string | null
      price: Prisma.Decimal
      stock: number
      category: string | null
      created_by: number | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["mst_product"]>
    composites: {}
  }

  type mst_productGetPayload<S extends boolean | null | undefined | mst_productDefaultArgs> = $Result.GetResult<Prisma.$mst_productPayload, S>

  type mst_productCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mst_productFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mst_productCountAggregateInputType | true
    }

  export interface mst_productDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mst_product'], meta: { name: 'mst_product' } }
    /**
     * Find zero or one Mst_product that matches the filter.
     * @param {mst_productFindUniqueArgs} args - Arguments to find a Mst_product
     * @example
     * // Get one Mst_product
     * const mst_product = await prisma.mst_product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mst_productFindUniqueArgs>(args: SelectSubset<T, mst_productFindUniqueArgs<ExtArgs>>): Prisma__mst_productClient<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Mst_product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mst_productFindUniqueOrThrowArgs} args - Arguments to find a Mst_product
     * @example
     * // Get one Mst_product
     * const mst_product = await prisma.mst_product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mst_productFindUniqueOrThrowArgs>(args: SelectSubset<T, mst_productFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mst_productClient<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Mst_product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_productFindFirstArgs} args - Arguments to find a Mst_product
     * @example
     * // Get one Mst_product
     * const mst_product = await prisma.mst_product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mst_productFindFirstArgs>(args?: SelectSubset<T, mst_productFindFirstArgs<ExtArgs>>): Prisma__mst_productClient<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Mst_product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_productFindFirstOrThrowArgs} args - Arguments to find a Mst_product
     * @example
     * // Get one Mst_product
     * const mst_product = await prisma.mst_product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mst_productFindFirstOrThrowArgs>(args?: SelectSubset<T, mst_productFindFirstOrThrowArgs<ExtArgs>>): Prisma__mst_productClient<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Mst_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_productFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mst_products
     * const mst_products = await prisma.mst_product.findMany()
     * 
     * // Get first 10 Mst_products
     * const mst_products = await prisma.mst_product.findMany({ take: 10 })
     * 
     * // Only select the `product_id`
     * const mst_productWithProduct_idOnly = await prisma.mst_product.findMany({ select: { product_id: true } })
     * 
     */
    findMany<T extends mst_productFindManyArgs>(args?: SelectSubset<T, mst_productFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Mst_product.
     * @param {mst_productCreateArgs} args - Arguments to create a Mst_product.
     * @example
     * // Create one Mst_product
     * const Mst_product = await prisma.mst_product.create({
     *   data: {
     *     // ... data to create a Mst_product
     *   }
     * })
     * 
     */
    create<T extends mst_productCreateArgs>(args: SelectSubset<T, mst_productCreateArgs<ExtArgs>>): Prisma__mst_productClient<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Mst_products.
     * @param {mst_productCreateManyArgs} args - Arguments to create many Mst_products.
     * @example
     * // Create many Mst_products
     * const mst_product = await prisma.mst_product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mst_productCreateManyArgs>(args?: SelectSubset<T, mst_productCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Mst_product.
     * @param {mst_productDeleteArgs} args - Arguments to delete one Mst_product.
     * @example
     * // Delete one Mst_product
     * const Mst_product = await prisma.mst_product.delete({
     *   where: {
     *     // ... filter to delete one Mst_product
     *   }
     * })
     * 
     */
    delete<T extends mst_productDeleteArgs>(args: SelectSubset<T, mst_productDeleteArgs<ExtArgs>>): Prisma__mst_productClient<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Mst_product.
     * @param {mst_productUpdateArgs} args - Arguments to update one Mst_product.
     * @example
     * // Update one Mst_product
     * const mst_product = await prisma.mst_product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mst_productUpdateArgs>(args: SelectSubset<T, mst_productUpdateArgs<ExtArgs>>): Prisma__mst_productClient<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Mst_products.
     * @param {mst_productDeleteManyArgs} args - Arguments to filter Mst_products to delete.
     * @example
     * // Delete a few Mst_products
     * const { count } = await prisma.mst_product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mst_productDeleteManyArgs>(args?: SelectSubset<T, mst_productDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_productUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mst_products
     * const mst_product = await prisma.mst_product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mst_productUpdateManyArgs>(args: SelectSubset<T, mst_productUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mst_product.
     * @param {mst_productUpsertArgs} args - Arguments to update or create a Mst_product.
     * @example
     * // Update or create a Mst_product
     * const mst_product = await prisma.mst_product.upsert({
     *   create: {
     *     // ... data to create a Mst_product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mst_product we want to update
     *   }
     * })
     */
    upsert<T extends mst_productUpsertArgs>(args: SelectSubset<T, mst_productUpsertArgs<ExtArgs>>): Prisma__mst_productClient<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Mst_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_productCountArgs} args - Arguments to filter Mst_products to count.
     * @example
     * // Count the number of Mst_products
     * const count = await prisma.mst_product.count({
     *   where: {
     *     // ... the filter for the Mst_products we want to count
     *   }
     * })
    **/
    count<T extends mst_productCountArgs>(
      args?: Subset<T, mst_productCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mst_productCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mst_product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_productAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mst_productAggregateArgs>(args: Subset<T, Mst_productAggregateArgs>): Prisma.PrismaPromise<GetMst_productAggregateType<T>>

    /**
     * Group by Mst_product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_productGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mst_productGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mst_productGroupByArgs['orderBy'] }
        : { orderBy?: mst_productGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mst_productGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMst_productGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mst_product model
   */
  readonly fields: mst_productFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mst_product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mst_productClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mst_user<T extends mst_product$mst_userArgs<ExtArgs> = {}>(args?: Subset<T, mst_product$mst_userArgs<ExtArgs>>): Prisma__mst_userClient<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mst_product model
   */ 
  interface mst_productFieldRefs {
    readonly product_id: FieldRef<"mst_product", 'Int'>
    readonly product_name: FieldRef<"mst_product", 'String'>
    readonly description: FieldRef<"mst_product", 'String'>
    readonly price: FieldRef<"mst_product", 'Decimal'>
    readonly stock: FieldRef<"mst_product", 'Int'>
    readonly category: FieldRef<"mst_product", 'String'>
    readonly created_by: FieldRef<"mst_product", 'Int'>
    readonly created_at: FieldRef<"mst_product", 'DateTime'>
    readonly updated_at: FieldRef<"mst_product", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * mst_product findUnique
   */
  export type mst_productFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    /**
     * Filter, which mst_product to fetch.
     */
    where: mst_productWhereUniqueInput
  }

  /**
   * mst_product findUniqueOrThrow
   */
  export type mst_productFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    /**
     * Filter, which mst_product to fetch.
     */
    where: mst_productWhereUniqueInput
  }

  /**
   * mst_product findFirst
   */
  export type mst_productFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    /**
     * Filter, which mst_product to fetch.
     */
    where?: mst_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mst_products to fetch.
     */
    orderBy?: mst_productOrderByWithRelationInput | mst_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mst_products.
     */
    cursor?: mst_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mst_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mst_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mst_products.
     */
    distinct?: Mst_productScalarFieldEnum | Mst_productScalarFieldEnum[]
  }

  /**
   * mst_product findFirstOrThrow
   */
  export type mst_productFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    /**
     * Filter, which mst_product to fetch.
     */
    where?: mst_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mst_products to fetch.
     */
    orderBy?: mst_productOrderByWithRelationInput | mst_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mst_products.
     */
    cursor?: mst_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mst_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mst_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mst_products.
     */
    distinct?: Mst_productScalarFieldEnum | Mst_productScalarFieldEnum[]
  }

  /**
   * mst_product findMany
   */
  export type mst_productFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    /**
     * Filter, which mst_products to fetch.
     */
    where?: mst_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mst_products to fetch.
     */
    orderBy?: mst_productOrderByWithRelationInput | mst_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mst_products.
     */
    cursor?: mst_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mst_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mst_products.
     */
    skip?: number
    distinct?: Mst_productScalarFieldEnum | Mst_productScalarFieldEnum[]
  }

  /**
   * mst_product create
   */
  export type mst_productCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    /**
     * The data needed to create a mst_product.
     */
    data: XOR<mst_productCreateInput, mst_productUncheckedCreateInput>
  }

  /**
   * mst_product createMany
   */
  export type mst_productCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mst_products.
     */
    data: mst_productCreateManyInput | mst_productCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mst_product update
   */
  export type mst_productUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    /**
     * The data needed to update a mst_product.
     */
    data: XOR<mst_productUpdateInput, mst_productUncheckedUpdateInput>
    /**
     * Choose, which mst_product to update.
     */
    where: mst_productWhereUniqueInput
  }

  /**
   * mst_product updateMany
   */
  export type mst_productUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mst_products.
     */
    data: XOR<mst_productUpdateManyMutationInput, mst_productUncheckedUpdateManyInput>
    /**
     * Filter which mst_products to update
     */
    where?: mst_productWhereInput
    /**
     * Limit how many mst_products to update.
     */
    limit?: number
  }

  /**
   * mst_product upsert
   */
  export type mst_productUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    /**
     * The filter to search for the mst_product to update in case it exists.
     */
    where: mst_productWhereUniqueInput
    /**
     * In case the mst_product found by the `where` argument doesn't exist, create a new mst_product with this data.
     */
    create: XOR<mst_productCreateInput, mst_productUncheckedCreateInput>
    /**
     * In case the mst_product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mst_productUpdateInput, mst_productUncheckedUpdateInput>
  }

  /**
   * mst_product delete
   */
  export type mst_productDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    /**
     * Filter which mst_product to delete.
     */
    where: mst_productWhereUniqueInput
  }

  /**
   * mst_product deleteMany
   */
  export type mst_productDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mst_products to delete
     */
    where?: mst_productWhereInput
    /**
     * Limit how many mst_products to delete.
     */
    limit?: number
  }

  /**
   * mst_product.mst_user
   */
  export type mst_product$mst_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    where?: mst_userWhereInput
  }

  /**
   * mst_product without action
   */
  export type mst_productDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
  }


  /**
   * Model mst_user
   */

  export type AggregateMst_user = {
    _count: Mst_userCountAggregateOutputType | null
    _avg: Mst_userAvgAggregateOutputType | null
    _sum: Mst_userSumAggregateOutputType | null
    _min: Mst_userMinAggregateOutputType | null
    _max: Mst_userMaxAggregateOutputType | null
  }

  export type Mst_userAvgAggregateOutputType = {
    user_id: number | null
  }

  export type Mst_userSumAggregateOutputType = {
    user_id: number | null
  }

  export type Mst_userMinAggregateOutputType = {
    user_id: number | null
    username: string | null
    email: string | null
    password: string | null
    full_name: string | null
    phone_number: string | null
    role: $Enums.mst_user_role | null
    status: $Enums.mst_user_status | null
    created_at: Date | null
    updated_at: Date | null
    is_deleted: boolean | null
  }

  export type Mst_userMaxAggregateOutputType = {
    user_id: number | null
    username: string | null
    email: string | null
    password: string | null
    full_name: string | null
    phone_number: string | null
    role: $Enums.mst_user_role | null
    status: $Enums.mst_user_status | null
    created_at: Date | null
    updated_at: Date | null
    is_deleted: boolean | null
  }

  export type Mst_userCountAggregateOutputType = {
    user_id: number
    username: number
    email: number
    password: number
    full_name: number
    phone_number: number
    role: number
    status: number
    created_at: number
    updated_at: number
    is_deleted: number
    _all: number
  }


  export type Mst_userAvgAggregateInputType = {
    user_id?: true
  }

  export type Mst_userSumAggregateInputType = {
    user_id?: true
  }

  export type Mst_userMinAggregateInputType = {
    user_id?: true
    username?: true
    email?: true
    password?: true
    full_name?: true
    phone_number?: true
    role?: true
    status?: true
    created_at?: true
    updated_at?: true
    is_deleted?: true
  }

  export type Mst_userMaxAggregateInputType = {
    user_id?: true
    username?: true
    email?: true
    password?: true
    full_name?: true
    phone_number?: true
    role?: true
    status?: true
    created_at?: true
    updated_at?: true
    is_deleted?: true
  }

  export type Mst_userCountAggregateInputType = {
    user_id?: true
    username?: true
    email?: true
    password?: true
    full_name?: true
    phone_number?: true
    role?: true
    status?: true
    created_at?: true
    updated_at?: true
    is_deleted?: true
    _all?: true
  }

  export type Mst_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mst_user to aggregate.
     */
    where?: mst_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mst_users to fetch.
     */
    orderBy?: mst_userOrderByWithRelationInput | mst_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mst_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mst_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mst_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mst_users
    **/
    _count?: true | Mst_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mst_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mst_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mst_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mst_userMaxAggregateInputType
  }

  export type GetMst_userAggregateType<T extends Mst_userAggregateArgs> = {
        [P in keyof T & keyof AggregateMst_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMst_user[P]>
      : GetScalarType<T[P], AggregateMst_user[P]>
  }




  export type mst_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mst_userWhereInput
    orderBy?: mst_userOrderByWithAggregationInput | mst_userOrderByWithAggregationInput[]
    by: Mst_userScalarFieldEnum[] | Mst_userScalarFieldEnum
    having?: mst_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mst_userCountAggregateInputType | true
    _avg?: Mst_userAvgAggregateInputType
    _sum?: Mst_userSumAggregateInputType
    _min?: Mst_userMinAggregateInputType
    _max?: Mst_userMaxAggregateInputType
  }

  export type Mst_userGroupByOutputType = {
    user_id: number
    username: string
    email: string
    password: string
    full_name: string | null
    phone_number: string | null
    role: $Enums.mst_user_role | null
    status: $Enums.mst_user_status | null
    created_at: Date | null
    updated_at: Date | null
    is_deleted: boolean
    _count: Mst_userCountAggregateOutputType | null
    _avg: Mst_userAvgAggregateOutputType | null
    _sum: Mst_userSumAggregateOutputType | null
    _min: Mst_userMinAggregateOutputType | null
    _max: Mst_userMaxAggregateOutputType | null
  }

  type GetMst_userGroupByPayload<T extends mst_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mst_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mst_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mst_userGroupByOutputType[P]>
            : GetScalarType<T[P], Mst_userGroupByOutputType[P]>
        }
      >
    >


  export type mst_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    full_name?: boolean
    phone_number?: boolean
    role?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_deleted?: boolean
    mst_product?: boolean | mst_user$mst_productArgs<ExtArgs>
    _count?: boolean | Mst_userCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_user"]>



  export type mst_userSelectScalar = {
    user_id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    full_name?: boolean
    phone_number?: boolean
    role?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_deleted?: boolean
  }

  export type mst_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "username" | "email" | "password" | "full_name" | "phone_number" | "role" | "status" | "created_at" | "updated_at" | "is_deleted", ExtArgs["result"]["mst_user"]>
  export type mst_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mst_product?: boolean | mst_user$mst_productArgs<ExtArgs>
    _count?: boolean | Mst_userCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $mst_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mst_user"
    objects: {
      mst_product: Prisma.$mst_productPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: number
      username: string
      email: string
      password: string
      full_name: string | null
      phone_number: string | null
      role: $Enums.mst_user_role | null
      status: $Enums.mst_user_status | null
      created_at: Date | null
      updated_at: Date | null
      is_deleted: boolean
    }, ExtArgs["result"]["mst_user"]>
    composites: {}
  }

  type mst_userGetPayload<S extends boolean | null | undefined | mst_userDefaultArgs> = $Result.GetResult<Prisma.$mst_userPayload, S>

  type mst_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mst_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mst_userCountAggregateInputType | true
    }

  export interface mst_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mst_user'], meta: { name: 'mst_user' } }
    /**
     * Find zero or one Mst_user that matches the filter.
     * @param {mst_userFindUniqueArgs} args - Arguments to find a Mst_user
     * @example
     * // Get one Mst_user
     * const mst_user = await prisma.mst_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mst_userFindUniqueArgs>(args: SelectSubset<T, mst_userFindUniqueArgs<ExtArgs>>): Prisma__mst_userClient<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Mst_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mst_userFindUniqueOrThrowArgs} args - Arguments to find a Mst_user
     * @example
     * // Get one Mst_user
     * const mst_user = await prisma.mst_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mst_userFindUniqueOrThrowArgs>(args: SelectSubset<T, mst_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mst_userClient<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Mst_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_userFindFirstArgs} args - Arguments to find a Mst_user
     * @example
     * // Get one Mst_user
     * const mst_user = await prisma.mst_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mst_userFindFirstArgs>(args?: SelectSubset<T, mst_userFindFirstArgs<ExtArgs>>): Prisma__mst_userClient<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Mst_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_userFindFirstOrThrowArgs} args - Arguments to find a Mst_user
     * @example
     * // Get one Mst_user
     * const mst_user = await prisma.mst_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mst_userFindFirstOrThrowArgs>(args?: SelectSubset<T, mst_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__mst_userClient<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Mst_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mst_users
     * const mst_users = await prisma.mst_user.findMany()
     * 
     * // Get first 10 Mst_users
     * const mst_users = await prisma.mst_user.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const mst_userWithUser_idOnly = await prisma.mst_user.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends mst_userFindManyArgs>(args?: SelectSubset<T, mst_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Mst_user.
     * @param {mst_userCreateArgs} args - Arguments to create a Mst_user.
     * @example
     * // Create one Mst_user
     * const Mst_user = await prisma.mst_user.create({
     *   data: {
     *     // ... data to create a Mst_user
     *   }
     * })
     * 
     */
    create<T extends mst_userCreateArgs>(args: SelectSubset<T, mst_userCreateArgs<ExtArgs>>): Prisma__mst_userClient<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Mst_users.
     * @param {mst_userCreateManyArgs} args - Arguments to create many Mst_users.
     * @example
     * // Create many Mst_users
     * const mst_user = await prisma.mst_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mst_userCreateManyArgs>(args?: SelectSubset<T, mst_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Mst_user.
     * @param {mst_userDeleteArgs} args - Arguments to delete one Mst_user.
     * @example
     * // Delete one Mst_user
     * const Mst_user = await prisma.mst_user.delete({
     *   where: {
     *     // ... filter to delete one Mst_user
     *   }
     * })
     * 
     */
    delete<T extends mst_userDeleteArgs>(args: SelectSubset<T, mst_userDeleteArgs<ExtArgs>>): Prisma__mst_userClient<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Mst_user.
     * @param {mst_userUpdateArgs} args - Arguments to update one Mst_user.
     * @example
     * // Update one Mst_user
     * const mst_user = await prisma.mst_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mst_userUpdateArgs>(args: SelectSubset<T, mst_userUpdateArgs<ExtArgs>>): Prisma__mst_userClient<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Mst_users.
     * @param {mst_userDeleteManyArgs} args - Arguments to filter Mst_users to delete.
     * @example
     * // Delete a few Mst_users
     * const { count } = await prisma.mst_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mst_userDeleteManyArgs>(args?: SelectSubset<T, mst_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mst_users
     * const mst_user = await prisma.mst_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mst_userUpdateManyArgs>(args: SelectSubset<T, mst_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mst_user.
     * @param {mst_userUpsertArgs} args - Arguments to update or create a Mst_user.
     * @example
     * // Update or create a Mst_user
     * const mst_user = await prisma.mst_user.upsert({
     *   create: {
     *     // ... data to create a Mst_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mst_user we want to update
     *   }
     * })
     */
    upsert<T extends mst_userUpsertArgs>(args: SelectSubset<T, mst_userUpsertArgs<ExtArgs>>): Prisma__mst_userClient<$Result.GetResult<Prisma.$mst_userPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Mst_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_userCountArgs} args - Arguments to filter Mst_users to count.
     * @example
     * // Count the number of Mst_users
     * const count = await prisma.mst_user.count({
     *   where: {
     *     // ... the filter for the Mst_users we want to count
     *   }
     * })
    **/
    count<T extends mst_userCountArgs>(
      args?: Subset<T, mst_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mst_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mst_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mst_userAggregateArgs>(args: Subset<T, Mst_userAggregateArgs>): Prisma.PrismaPromise<GetMst_userAggregateType<T>>

    /**
     * Group by Mst_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mst_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mst_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mst_userGroupByArgs['orderBy'] }
        : { orderBy?: mst_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mst_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMst_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mst_user model
   */
  readonly fields: mst_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mst_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mst_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mst_product<T extends mst_user$mst_productArgs<ExtArgs> = {}>(args?: Subset<T, mst_user$mst_productArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mst_productPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mst_user model
   */ 
  interface mst_userFieldRefs {
    readonly user_id: FieldRef<"mst_user", 'Int'>
    readonly username: FieldRef<"mst_user", 'String'>
    readonly email: FieldRef<"mst_user", 'String'>
    readonly password: FieldRef<"mst_user", 'String'>
    readonly full_name: FieldRef<"mst_user", 'String'>
    readonly phone_number: FieldRef<"mst_user", 'String'>
    readonly role: FieldRef<"mst_user", 'mst_user_role'>
    readonly status: FieldRef<"mst_user", 'mst_user_status'>
    readonly created_at: FieldRef<"mst_user", 'DateTime'>
    readonly updated_at: FieldRef<"mst_user", 'DateTime'>
    readonly is_deleted: FieldRef<"mst_user", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * mst_user findUnique
   */
  export type mst_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    /**
     * Filter, which mst_user to fetch.
     */
    where: mst_userWhereUniqueInput
  }

  /**
   * mst_user findUniqueOrThrow
   */
  export type mst_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    /**
     * Filter, which mst_user to fetch.
     */
    where: mst_userWhereUniqueInput
  }

  /**
   * mst_user findFirst
   */
  export type mst_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    /**
     * Filter, which mst_user to fetch.
     */
    where?: mst_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mst_users to fetch.
     */
    orderBy?: mst_userOrderByWithRelationInput | mst_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mst_users.
     */
    cursor?: mst_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mst_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mst_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mst_users.
     */
    distinct?: Mst_userScalarFieldEnum | Mst_userScalarFieldEnum[]
  }

  /**
   * mst_user findFirstOrThrow
   */
  export type mst_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    /**
     * Filter, which mst_user to fetch.
     */
    where?: mst_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mst_users to fetch.
     */
    orderBy?: mst_userOrderByWithRelationInput | mst_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mst_users.
     */
    cursor?: mst_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mst_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mst_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mst_users.
     */
    distinct?: Mst_userScalarFieldEnum | Mst_userScalarFieldEnum[]
  }

  /**
   * mst_user findMany
   */
  export type mst_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    /**
     * Filter, which mst_users to fetch.
     */
    where?: mst_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mst_users to fetch.
     */
    orderBy?: mst_userOrderByWithRelationInput | mst_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mst_users.
     */
    cursor?: mst_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mst_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mst_users.
     */
    skip?: number
    distinct?: Mst_userScalarFieldEnum | Mst_userScalarFieldEnum[]
  }

  /**
   * mst_user create
   */
  export type mst_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    /**
     * The data needed to create a mst_user.
     */
    data: XOR<mst_userCreateInput, mst_userUncheckedCreateInput>
  }

  /**
   * mst_user createMany
   */
  export type mst_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mst_users.
     */
    data: mst_userCreateManyInput | mst_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mst_user update
   */
  export type mst_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    /**
     * The data needed to update a mst_user.
     */
    data: XOR<mst_userUpdateInput, mst_userUncheckedUpdateInput>
    /**
     * Choose, which mst_user to update.
     */
    where: mst_userWhereUniqueInput
  }

  /**
   * mst_user updateMany
   */
  export type mst_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mst_users.
     */
    data: XOR<mst_userUpdateManyMutationInput, mst_userUncheckedUpdateManyInput>
    /**
     * Filter which mst_users to update
     */
    where?: mst_userWhereInput
    /**
     * Limit how many mst_users to update.
     */
    limit?: number
  }

  /**
   * mst_user upsert
   */
  export type mst_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    /**
     * The filter to search for the mst_user to update in case it exists.
     */
    where: mst_userWhereUniqueInput
    /**
     * In case the mst_user found by the `where` argument doesn't exist, create a new mst_user with this data.
     */
    create: XOR<mst_userCreateInput, mst_userUncheckedCreateInput>
    /**
     * In case the mst_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mst_userUpdateInput, mst_userUncheckedUpdateInput>
  }

  /**
   * mst_user delete
   */
  export type mst_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
    /**
     * Filter which mst_user to delete.
     */
    where: mst_userWhereUniqueInput
  }

  /**
   * mst_user deleteMany
   */
  export type mst_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mst_users to delete
     */
    where?: mst_userWhereInput
    /**
     * Limit how many mst_users to delete.
     */
    limit?: number
  }

  /**
   * mst_user.mst_product
   */
  export type mst_user$mst_productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_product
     */
    select?: mst_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_product
     */
    omit?: mst_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_productInclude<ExtArgs> | null
    where?: mst_productWhereInput
    orderBy?: mst_productOrderByWithRelationInput | mst_productOrderByWithRelationInput[]
    cursor?: mst_productWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mst_productScalarFieldEnum | Mst_productScalarFieldEnum[]
  }

  /**
   * mst_user without action
   */
  export type mst_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mst_user
     */
    select?: mst_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mst_user
     */
    omit?: mst_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mst_userInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Mst_productScalarFieldEnum: {
    product_id: 'product_id',
    product_name: 'product_name',
    description: 'description',
    price: 'price',
    stock: 'stock',
    category: 'category',
    created_by: 'created_by',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Mst_productScalarFieldEnum = (typeof Mst_productScalarFieldEnum)[keyof typeof Mst_productScalarFieldEnum]


  export const Mst_userScalarFieldEnum: {
    user_id: 'user_id',
    username: 'username',
    email: 'email',
    password: 'password',
    full_name: 'full_name',
    phone_number: 'phone_number',
    role: 'role',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    is_deleted: 'is_deleted'
  };

  export type Mst_userScalarFieldEnum = (typeof Mst_userScalarFieldEnum)[keyof typeof Mst_userScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const mst_productOrderByRelevanceFieldEnum: {
    product_name: 'product_name',
    description: 'description',
    category: 'category'
  };

  export type mst_productOrderByRelevanceFieldEnum = (typeof mst_productOrderByRelevanceFieldEnum)[keyof typeof mst_productOrderByRelevanceFieldEnum]


  export const mst_userOrderByRelevanceFieldEnum: {
    username: 'username',
    email: 'email',
    password: 'password',
    full_name: 'full_name',
    phone_number: 'phone_number'
  };

  export type mst_userOrderByRelevanceFieldEnum = (typeof mst_userOrderByRelevanceFieldEnum)[keyof typeof mst_userOrderByRelevanceFieldEnum]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'mst_user_role'
   */
  export type Enummst_user_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'mst_user_role'>
    


  /**
   * Reference to a field of type 'mst_user_status'
   */
  export type Enummst_user_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'mst_user_status'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type mst_productWhereInput = {
    AND?: mst_productWhereInput | mst_productWhereInput[]
    OR?: mst_productWhereInput[]
    NOT?: mst_productWhereInput | mst_productWhereInput[]
    product_id?: IntFilter<"mst_product"> | number
    product_name?: StringFilter<"mst_product"> | string
    description?: StringNullableFilter<"mst_product"> | string | null
    price?: DecimalFilter<"mst_product"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"mst_product"> | number
    category?: StringNullableFilter<"mst_product"> | string | null
    created_by?: IntNullableFilter<"mst_product"> | number | null
    created_at?: DateTimeNullableFilter<"mst_product"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"mst_product"> | Date | string | null
    mst_user?: XOR<Mst_userNullableScalarRelationFilter, mst_userWhereInput> | null
  }

  export type mst_productOrderByWithRelationInput = {
    product_id?: SortOrder
    product_name?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    stock?: SortOrder
    category?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    mst_user?: mst_userOrderByWithRelationInput
    _relevance?: mst_productOrderByRelevanceInput
  }

  export type mst_productWhereUniqueInput = Prisma.AtLeast<{
    product_id?: number
    product_name?: string
    AND?: mst_productWhereInput | mst_productWhereInput[]
    OR?: mst_productWhereInput[]
    NOT?: mst_productWhereInput | mst_productWhereInput[]
    description?: StringNullableFilter<"mst_product"> | string | null
    price?: DecimalFilter<"mst_product"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"mst_product"> | number
    category?: StringNullableFilter<"mst_product"> | string | null
    created_by?: IntNullableFilter<"mst_product"> | number | null
    created_at?: DateTimeNullableFilter<"mst_product"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"mst_product"> | Date | string | null
    mst_user?: XOR<Mst_userNullableScalarRelationFilter, mst_userWhereInput> | null
  }, "product_id" | "product_name">

  export type mst_productOrderByWithAggregationInput = {
    product_id?: SortOrder
    product_name?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    stock?: SortOrder
    category?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: mst_productCountOrderByAggregateInput
    _avg?: mst_productAvgOrderByAggregateInput
    _max?: mst_productMaxOrderByAggregateInput
    _min?: mst_productMinOrderByAggregateInput
    _sum?: mst_productSumOrderByAggregateInput
  }

  export type mst_productScalarWhereWithAggregatesInput = {
    AND?: mst_productScalarWhereWithAggregatesInput | mst_productScalarWhereWithAggregatesInput[]
    OR?: mst_productScalarWhereWithAggregatesInput[]
    NOT?: mst_productScalarWhereWithAggregatesInput | mst_productScalarWhereWithAggregatesInput[]
    product_id?: IntWithAggregatesFilter<"mst_product"> | number
    product_name?: StringWithAggregatesFilter<"mst_product"> | string
    description?: StringNullableWithAggregatesFilter<"mst_product"> | string | null
    price?: DecimalWithAggregatesFilter<"mst_product"> | Decimal | DecimalJsLike | number | string
    stock?: IntWithAggregatesFilter<"mst_product"> | number
    category?: StringNullableWithAggregatesFilter<"mst_product"> | string | null
    created_by?: IntNullableWithAggregatesFilter<"mst_product"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"mst_product"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"mst_product"> | Date | string | null
  }

  export type mst_userWhereInput = {
    AND?: mst_userWhereInput | mst_userWhereInput[]
    OR?: mst_userWhereInput[]
    NOT?: mst_userWhereInput | mst_userWhereInput[]
    user_id?: IntFilter<"mst_user"> | number
    username?: StringFilter<"mst_user"> | string
    email?: StringFilter<"mst_user"> | string
    password?: StringFilter<"mst_user"> | string
    full_name?: StringNullableFilter<"mst_user"> | string | null
    phone_number?: StringNullableFilter<"mst_user"> | string | null
    role?: Enummst_user_roleNullableFilter<"mst_user"> | $Enums.mst_user_role | null
    status?: Enummst_user_statusNullableFilter<"mst_user"> | $Enums.mst_user_status | null
    created_at?: DateTimeNullableFilter<"mst_user"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"mst_user"> | Date | string | null
    is_deleted?: BoolFilter<"mst_user"> | boolean
    mst_product?: Mst_productListRelationFilter
  }

  export type mst_userOrderByWithRelationInput = {
    user_id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    full_name?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    mst_product?: mst_productOrderByRelationAggregateInput
    _relevance?: mst_userOrderByRelevanceInput
  }

  export type mst_userWhereUniqueInput = Prisma.AtLeast<{
    user_id?: number
    username?: string
    email?: string
    phone_number?: string
    AND?: mst_userWhereInput | mst_userWhereInput[]
    OR?: mst_userWhereInput[]
    NOT?: mst_userWhereInput | mst_userWhereInput[]
    password?: StringFilter<"mst_user"> | string
    full_name?: StringNullableFilter<"mst_user"> | string | null
    role?: Enummst_user_roleNullableFilter<"mst_user"> | $Enums.mst_user_role | null
    status?: Enummst_user_statusNullableFilter<"mst_user"> | $Enums.mst_user_status | null
    created_at?: DateTimeNullableFilter<"mst_user"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"mst_user"> | Date | string | null
    is_deleted?: BoolFilter<"mst_user"> | boolean
    mst_product?: Mst_productListRelationFilter
  }, "user_id" | "username" | "email" | "phone_number">

  export type mst_userOrderByWithAggregationInput = {
    user_id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    full_name?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    _count?: mst_userCountOrderByAggregateInput
    _avg?: mst_userAvgOrderByAggregateInput
    _max?: mst_userMaxOrderByAggregateInput
    _min?: mst_userMinOrderByAggregateInput
    _sum?: mst_userSumOrderByAggregateInput
  }

  export type mst_userScalarWhereWithAggregatesInput = {
    AND?: mst_userScalarWhereWithAggregatesInput | mst_userScalarWhereWithAggregatesInput[]
    OR?: mst_userScalarWhereWithAggregatesInput[]
    NOT?: mst_userScalarWhereWithAggregatesInput | mst_userScalarWhereWithAggregatesInput[]
    user_id?: IntWithAggregatesFilter<"mst_user"> | number
    username?: StringWithAggregatesFilter<"mst_user"> | string
    email?: StringWithAggregatesFilter<"mst_user"> | string
    password?: StringWithAggregatesFilter<"mst_user"> | string
    full_name?: StringNullableWithAggregatesFilter<"mst_user"> | string | null
    phone_number?: StringNullableWithAggregatesFilter<"mst_user"> | string | null
    role?: Enummst_user_roleNullableWithAggregatesFilter<"mst_user"> | $Enums.mst_user_role | null
    status?: Enummst_user_statusNullableWithAggregatesFilter<"mst_user"> | $Enums.mst_user_status | null
    created_at?: DateTimeNullableWithAggregatesFilter<"mst_user"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"mst_user"> | Date | string | null
    is_deleted?: BoolWithAggregatesFilter<"mst_user"> | boolean
  }

  export type mst_productCreateInput = {
    product_name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    stock: number
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    mst_user?: mst_userCreateNestedOneWithoutMst_productInput
  }

  export type mst_productUncheckedCreateInput = {
    product_id?: number
    product_name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    stock: number
    category?: string | null
    created_by?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type mst_productUpdateInput = {
    product_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mst_user?: mst_userUpdateOneWithoutMst_productNestedInput
  }

  export type mst_productUncheckedUpdateInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    product_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mst_productCreateManyInput = {
    product_id?: number
    product_name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    stock: number
    category?: string | null
    created_by?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type mst_productUpdateManyMutationInput = {
    product_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mst_productUncheckedUpdateManyInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    product_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mst_userCreateInput = {
    username: string
    email: string
    password: string
    full_name?: string | null
    phone_number?: string | null
    role?: $Enums.mst_user_role | null
    status?: $Enums.mst_user_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_deleted?: boolean
    mst_product?: mst_productCreateNestedManyWithoutMst_userInput
  }

  export type mst_userUncheckedCreateInput = {
    user_id?: number
    username: string
    email: string
    password: string
    full_name?: string | null
    phone_number?: string | null
    role?: $Enums.mst_user_role | null
    status?: $Enums.mst_user_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_deleted?: boolean
    mst_product?: mst_productUncheckedCreateNestedManyWithoutMst_userInput
  }

  export type mst_userUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableEnummst_user_roleFieldUpdateOperationsInput | $Enums.mst_user_role | null
    status?: NullableEnummst_user_statusFieldUpdateOperationsInput | $Enums.mst_user_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    mst_product?: mst_productUpdateManyWithoutMst_userNestedInput
  }

  export type mst_userUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableEnummst_user_roleFieldUpdateOperationsInput | $Enums.mst_user_role | null
    status?: NullableEnummst_user_statusFieldUpdateOperationsInput | $Enums.mst_user_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    mst_product?: mst_productUncheckedUpdateManyWithoutMst_userNestedInput
  }

  export type mst_userCreateManyInput = {
    user_id?: number
    username: string
    email: string
    password: string
    full_name?: string | null
    phone_number?: string | null
    role?: $Enums.mst_user_role | null
    status?: $Enums.mst_user_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_deleted?: boolean
  }

  export type mst_userUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableEnummst_user_roleFieldUpdateOperationsInput | $Enums.mst_user_role | null
    status?: NullableEnummst_user_statusFieldUpdateOperationsInput | $Enums.mst_user_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type mst_userUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableEnummst_user_roleFieldUpdateOperationsInput | $Enums.mst_user_role | null
    status?: NullableEnummst_user_statusFieldUpdateOperationsInput | $Enums.mst_user_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Mst_userNullableScalarRelationFilter = {
    is?: mst_userWhereInput | null
    isNot?: mst_userWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type mst_productOrderByRelevanceInput = {
    fields: mst_productOrderByRelevanceFieldEnum | mst_productOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type mst_productCountOrderByAggregateInput = {
    product_id?: SortOrder
    product_name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    category?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type mst_productAvgOrderByAggregateInput = {
    product_id?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    created_by?: SortOrder
  }

  export type mst_productMaxOrderByAggregateInput = {
    product_id?: SortOrder
    product_name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    category?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type mst_productMinOrderByAggregateInput = {
    product_id?: SortOrder
    product_name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    category?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type mst_productSumOrderByAggregateInput = {
    product_id?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    created_by?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Enummst_user_roleNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.mst_user_role | Enummst_user_roleFieldRefInput<$PrismaModel> | null
    in?: $Enums.mst_user_role[] | null
    notIn?: $Enums.mst_user_role[] | null
    not?: NestedEnummst_user_roleNullableFilter<$PrismaModel> | $Enums.mst_user_role | null
  }

  export type Enummst_user_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.mst_user_status | Enummst_user_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.mst_user_status[] | null
    notIn?: $Enums.mst_user_status[] | null
    not?: NestedEnummst_user_statusNullableFilter<$PrismaModel> | $Enums.mst_user_status | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type Mst_productListRelationFilter = {
    every?: mst_productWhereInput
    some?: mst_productWhereInput
    none?: mst_productWhereInput
  }

  export type mst_productOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mst_userOrderByRelevanceInput = {
    fields: mst_userOrderByRelevanceFieldEnum | mst_userOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type mst_userCountOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    full_name?: SortOrder
    phone_number?: SortOrder
    role?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_deleted?: SortOrder
  }

  export type mst_userAvgOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type mst_userMaxOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    full_name?: SortOrder
    phone_number?: SortOrder
    role?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_deleted?: SortOrder
  }

  export type mst_userMinOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    full_name?: SortOrder
    phone_number?: SortOrder
    role?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_deleted?: SortOrder
  }

  export type mst_userSumOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type Enummst_user_roleNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.mst_user_role | Enummst_user_roleFieldRefInput<$PrismaModel> | null
    in?: $Enums.mst_user_role[] | null
    notIn?: $Enums.mst_user_role[] | null
    not?: NestedEnummst_user_roleNullableWithAggregatesFilter<$PrismaModel> | $Enums.mst_user_role | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnummst_user_roleNullableFilter<$PrismaModel>
    _max?: NestedEnummst_user_roleNullableFilter<$PrismaModel>
  }

  export type Enummst_user_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.mst_user_status | Enummst_user_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.mst_user_status[] | null
    notIn?: $Enums.mst_user_status[] | null
    not?: NestedEnummst_user_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.mst_user_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnummst_user_statusNullableFilter<$PrismaModel>
    _max?: NestedEnummst_user_statusNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type mst_userCreateNestedOneWithoutMst_productInput = {
    create?: XOR<mst_userCreateWithoutMst_productInput, mst_userUncheckedCreateWithoutMst_productInput>
    connectOrCreate?: mst_userCreateOrConnectWithoutMst_productInput
    connect?: mst_userWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type mst_userUpdateOneWithoutMst_productNestedInput = {
    create?: XOR<mst_userCreateWithoutMst_productInput, mst_userUncheckedCreateWithoutMst_productInput>
    connectOrCreate?: mst_userCreateOrConnectWithoutMst_productInput
    upsert?: mst_userUpsertWithoutMst_productInput
    disconnect?: mst_userWhereInput | boolean
    delete?: mst_userWhereInput | boolean
    connect?: mst_userWhereUniqueInput
    update?: XOR<XOR<mst_userUpdateToOneWithWhereWithoutMst_productInput, mst_userUpdateWithoutMst_productInput>, mst_userUncheckedUpdateWithoutMst_productInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type mst_productCreateNestedManyWithoutMst_userInput = {
    create?: XOR<mst_productCreateWithoutMst_userInput, mst_productUncheckedCreateWithoutMst_userInput> | mst_productCreateWithoutMst_userInput[] | mst_productUncheckedCreateWithoutMst_userInput[]
    connectOrCreate?: mst_productCreateOrConnectWithoutMst_userInput | mst_productCreateOrConnectWithoutMst_userInput[]
    createMany?: mst_productCreateManyMst_userInputEnvelope
    connect?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
  }

  export type mst_productUncheckedCreateNestedManyWithoutMst_userInput = {
    create?: XOR<mst_productCreateWithoutMst_userInput, mst_productUncheckedCreateWithoutMst_userInput> | mst_productCreateWithoutMst_userInput[] | mst_productUncheckedCreateWithoutMst_userInput[]
    connectOrCreate?: mst_productCreateOrConnectWithoutMst_userInput | mst_productCreateOrConnectWithoutMst_userInput[]
    createMany?: mst_productCreateManyMst_userInputEnvelope
    connect?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
  }

  export type NullableEnummst_user_roleFieldUpdateOperationsInput = {
    set?: $Enums.mst_user_role | null
  }

  export type NullableEnummst_user_statusFieldUpdateOperationsInput = {
    set?: $Enums.mst_user_status | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type mst_productUpdateManyWithoutMst_userNestedInput = {
    create?: XOR<mst_productCreateWithoutMst_userInput, mst_productUncheckedCreateWithoutMst_userInput> | mst_productCreateWithoutMst_userInput[] | mst_productUncheckedCreateWithoutMst_userInput[]
    connectOrCreate?: mst_productCreateOrConnectWithoutMst_userInput | mst_productCreateOrConnectWithoutMst_userInput[]
    upsert?: mst_productUpsertWithWhereUniqueWithoutMst_userInput | mst_productUpsertWithWhereUniqueWithoutMst_userInput[]
    createMany?: mst_productCreateManyMst_userInputEnvelope
    set?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
    disconnect?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
    delete?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
    connect?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
    update?: mst_productUpdateWithWhereUniqueWithoutMst_userInput | mst_productUpdateWithWhereUniqueWithoutMst_userInput[]
    updateMany?: mst_productUpdateManyWithWhereWithoutMst_userInput | mst_productUpdateManyWithWhereWithoutMst_userInput[]
    deleteMany?: mst_productScalarWhereInput | mst_productScalarWhereInput[]
  }

  export type mst_productUncheckedUpdateManyWithoutMst_userNestedInput = {
    create?: XOR<mst_productCreateWithoutMst_userInput, mst_productUncheckedCreateWithoutMst_userInput> | mst_productCreateWithoutMst_userInput[] | mst_productUncheckedCreateWithoutMst_userInput[]
    connectOrCreate?: mst_productCreateOrConnectWithoutMst_userInput | mst_productCreateOrConnectWithoutMst_userInput[]
    upsert?: mst_productUpsertWithWhereUniqueWithoutMst_userInput | mst_productUpsertWithWhereUniqueWithoutMst_userInput[]
    createMany?: mst_productCreateManyMst_userInputEnvelope
    set?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
    disconnect?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
    delete?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
    connect?: mst_productWhereUniqueInput | mst_productWhereUniqueInput[]
    update?: mst_productUpdateWithWhereUniqueWithoutMst_userInput | mst_productUpdateWithWhereUniqueWithoutMst_userInput[]
    updateMany?: mst_productUpdateManyWithWhereWithoutMst_userInput | mst_productUpdateManyWithWhereWithoutMst_userInput[]
    deleteMany?: mst_productScalarWhereInput | mst_productScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnummst_user_roleNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.mst_user_role | Enummst_user_roleFieldRefInput<$PrismaModel> | null
    in?: $Enums.mst_user_role[] | null
    notIn?: $Enums.mst_user_role[] | null
    not?: NestedEnummst_user_roleNullableFilter<$PrismaModel> | $Enums.mst_user_role | null
  }

  export type NestedEnummst_user_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.mst_user_status | Enummst_user_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.mst_user_status[] | null
    notIn?: $Enums.mst_user_status[] | null
    not?: NestedEnummst_user_statusNullableFilter<$PrismaModel> | $Enums.mst_user_status | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnummst_user_roleNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.mst_user_role | Enummst_user_roleFieldRefInput<$PrismaModel> | null
    in?: $Enums.mst_user_role[] | null
    notIn?: $Enums.mst_user_role[] | null
    not?: NestedEnummst_user_roleNullableWithAggregatesFilter<$PrismaModel> | $Enums.mst_user_role | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnummst_user_roleNullableFilter<$PrismaModel>
    _max?: NestedEnummst_user_roleNullableFilter<$PrismaModel>
  }

  export type NestedEnummst_user_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.mst_user_status | Enummst_user_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.mst_user_status[] | null
    notIn?: $Enums.mst_user_status[] | null
    not?: NestedEnummst_user_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.mst_user_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnummst_user_statusNullableFilter<$PrismaModel>
    _max?: NestedEnummst_user_statusNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type mst_userCreateWithoutMst_productInput = {
    username: string
    email: string
    password: string
    full_name?: string | null
    phone_number?: string | null
    role?: $Enums.mst_user_role | null
    status?: $Enums.mst_user_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_deleted?: boolean
  }

  export type mst_userUncheckedCreateWithoutMst_productInput = {
    user_id?: number
    username: string
    email: string
    password: string
    full_name?: string | null
    phone_number?: string | null
    role?: $Enums.mst_user_role | null
    status?: $Enums.mst_user_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    is_deleted?: boolean
  }

  export type mst_userCreateOrConnectWithoutMst_productInput = {
    where: mst_userWhereUniqueInput
    create: XOR<mst_userCreateWithoutMst_productInput, mst_userUncheckedCreateWithoutMst_productInput>
  }

  export type mst_userUpsertWithoutMst_productInput = {
    update: XOR<mst_userUpdateWithoutMst_productInput, mst_userUncheckedUpdateWithoutMst_productInput>
    create: XOR<mst_userCreateWithoutMst_productInput, mst_userUncheckedCreateWithoutMst_productInput>
    where?: mst_userWhereInput
  }

  export type mst_userUpdateToOneWithWhereWithoutMst_productInput = {
    where?: mst_userWhereInput
    data: XOR<mst_userUpdateWithoutMst_productInput, mst_userUncheckedUpdateWithoutMst_productInput>
  }

  export type mst_userUpdateWithoutMst_productInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableEnummst_user_roleFieldUpdateOperationsInput | $Enums.mst_user_role | null
    status?: NullableEnummst_user_statusFieldUpdateOperationsInput | $Enums.mst_user_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type mst_userUncheckedUpdateWithoutMst_productInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableEnummst_user_roleFieldUpdateOperationsInput | $Enums.mst_user_role | null
    status?: NullableEnummst_user_statusFieldUpdateOperationsInput | $Enums.mst_user_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type mst_productCreateWithoutMst_userInput = {
    product_name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    stock: number
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type mst_productUncheckedCreateWithoutMst_userInput = {
    product_id?: number
    product_name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    stock: number
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type mst_productCreateOrConnectWithoutMst_userInput = {
    where: mst_productWhereUniqueInput
    create: XOR<mst_productCreateWithoutMst_userInput, mst_productUncheckedCreateWithoutMst_userInput>
  }

  export type mst_productCreateManyMst_userInputEnvelope = {
    data: mst_productCreateManyMst_userInput | mst_productCreateManyMst_userInput[]
    skipDuplicates?: boolean
  }

  export type mst_productUpsertWithWhereUniqueWithoutMst_userInput = {
    where: mst_productWhereUniqueInput
    update: XOR<mst_productUpdateWithoutMst_userInput, mst_productUncheckedUpdateWithoutMst_userInput>
    create: XOR<mst_productCreateWithoutMst_userInput, mst_productUncheckedCreateWithoutMst_userInput>
  }

  export type mst_productUpdateWithWhereUniqueWithoutMst_userInput = {
    where: mst_productWhereUniqueInput
    data: XOR<mst_productUpdateWithoutMst_userInput, mst_productUncheckedUpdateWithoutMst_userInput>
  }

  export type mst_productUpdateManyWithWhereWithoutMst_userInput = {
    where: mst_productScalarWhereInput
    data: XOR<mst_productUpdateManyMutationInput, mst_productUncheckedUpdateManyWithoutMst_userInput>
  }

  export type mst_productScalarWhereInput = {
    AND?: mst_productScalarWhereInput | mst_productScalarWhereInput[]
    OR?: mst_productScalarWhereInput[]
    NOT?: mst_productScalarWhereInput | mst_productScalarWhereInput[]
    product_id?: IntFilter<"mst_product"> | number
    product_name?: StringFilter<"mst_product"> | string
    description?: StringNullableFilter<"mst_product"> | string | null
    price?: DecimalFilter<"mst_product"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"mst_product"> | number
    category?: StringNullableFilter<"mst_product"> | string | null
    created_by?: IntNullableFilter<"mst_product"> | number | null
    created_at?: DateTimeNullableFilter<"mst_product"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"mst_product"> | Date | string | null
  }

  export type mst_productCreateManyMst_userInput = {
    product_id?: number
    product_name: string
    description?: string | null
    price: Decimal | DecimalJsLike | number | string
    stock: number
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type mst_productUpdateWithoutMst_userInput = {
    product_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mst_productUncheckedUpdateWithoutMst_userInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    product_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mst_productUncheckedUpdateManyWithoutMst_userInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    product_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}
generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated/db2"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_2")
}

model tr_log {
  id           String   @id @default(uuid())
  timestamp    DateTime @default(now())
  userId       String?  // bisa nullable kalau request tidak butuh login
  endpoint     String
  method       String
  statusCode   Int
  ipAddress    String?
  userAgent    String?
  action       String?   // deskripsi aktivitas (misalnya: "LOGIN", "CREATE_DOC", dll)
  metadata     Json?     // tambahan data fleksibel (misal: payload, params, error detail)
}


model mst_role {
  id             Int                 @id @default(autoincrement())
  role_name      String              @unique @db.VarChar(255)
  description    String?             @db.Text
  created_at     DateTime            @default(now()) @db.Timestamp(0)
  updated_at     DateTime?           @db.Timestamp(0)
  created_by     Int?
  updated_by     Int?
  authorizations mst_authorization[]
}

model mst_line {
  id                     Int                     @id @default(autoincrement())
  line                   String?                 @db.VarChar(255)
  id_section_manufacture Int?
  code_line              String?                 @db.VarChar(255)
  status                 Boolean                 @default(true)
  is_deleted             Boolean                 @default(false)
  created_by             String?
  created_at             DateTime                @default(now()) @db.Timestamp(0)
  updated_by             String?
  updated_at             DateTime?               @db.Timestamp(0)
  areas                  mst_area[]
  section_manufacture    mst_section_department? @relation(fields: [id_section_manufacture], references: [id])

  @@index([id_section_manufacture], map: "mst_line_id_section_manufacture_fkey")
}

model mst_department_head {
  id               Int                     @id @default(autoincrement())
  authorization_id Int?
  section_id       Int?
  created_by       String?                 @db.VarChar(255)
  is_deleted       Boolean?                @default(false)
  authorization    mst_authorization?      @relation(fields: [authorization_id], references: [id])
  section          mst_section_department? @relation(fields: [section_id], references: [id])

  @@index([authorization_id], map: "authorization_id_idx")
  @@index([section_id], map: "section_id_idx")
}

model mst_section_head {
  id               Int                     @id @default(autoincrement())
  authorization_id Int?
  section_id       Int?
  created_by       String?                 @db.VarChar(255)
  is_deleted       Boolean?                @default(false)
  authorization    mst_authorization?      @relation(fields: [authorization_id], references: [id])
  section          mst_section_department? @relation(fields: [section_id], references: [id])

  @@index([section_id], map: "section_id_idx")
  @@index([authorization_id], map: "authorization_id_idx")
}

model mst_sub_document {
  id   Int     @id @default(autoincrement())
  desc String? @db.VarChar(255)
  code String? @db.VarChar(255)
}

model mst_development {
  id               Int       @id @default(autoincrement())
  development_desc String?   @db.VarChar(255)
  development_code String?   @db.VarChar(255)
  is_deleted       Boolean   @default(false)
  status           Boolean   @default(true)
  updated_by       String?   @db.VarChar(255)
  updated_at       DateTime? @default(now()) @db.Timestamp(0)
}

model mst_doc_type {
  id            Int       @id @default(autoincrement())
  document_type String?   @db.VarChar(255)
  document_code String?   @db.VarChar(255)
  is_deleted    Boolean   @default(false)
  status        Boolean   @default(true)
  updated_by    String?   @db.VarChar(255)
  updated_at    DateTime? @default(now()) @db.Timestamp(0)
}

model mst_area {
  id              Int                  @id @default(autoincrement())
  id_line         Int?
  area            String?              @db.VarChar(255)
  code_area       String?              @db.VarChar(255)
  status          Boolean              @default(true)
  created_by      String?
  created_at      DateTime             @default(now()) @db.Timestamp(0)
  updated_by      String?
  updated_at      DateTime             @updatedAt @db.Timestamp(0)
  is_deleted      Boolean              @default(false)
  line            mst_line?            @relation(fields: [id_line], references: [id])
  documentNumbers tr_document_number[]

  @@index([id_line])
}

model mst_plant {
  id                 Int                    @id @default(autoincrement())
  plant_name         String?                @db.VarChar(255)
  plant_code         String?                @db.VarChar(255)
  address            String?                @db.Text
  created_at         DateTime?              @default(now()) @db.Timestamp(0)
  created_by         String?
  updated_at         DateTime?              @db.Timestamp(0)
  updated_by         String?
  authorizations     mst_authorization[]
  departments        mst_department[]
  plantsite          tr_additional_doc[]
  authorizationPlant tr_authorization_doc[]
  documents          tr_document_number[]
  tr_handover        tr_handover[]
  plant              tr_proposed_changes[]
}

model mst_department {
  id              Int                      @id @default(autoincrement())
  department_name String?                  @db.VarChar(255)
  department_code String?                  @db.VarChar(255)
  plant_id        Int?
  status          Boolean                  @default(true)
  is_deleted      Boolean                  @default(false)
  created_by      String?
  created_at      DateTime                 @default(now()) @db.Timestamp(0)
  updated_by      String?
  updated_at      DateTime?                @db.Timestamp(0)
  authorizations  mst_authorization[]
  plant           mst_plant?               @relation(fields: [plant_id], references: [id])
  sections        mst_section_department[]
  departmentAuth  tr_authorization_doc[]
  tr_handover     tr_handover[]
  department      tr_proposed_changes[]

  @@index([plant_id], map: "mst_department_plant_id_fkey")
}

model mst_section_department {
  id                    Int                    @id @default(autoincrement())
  department_id         Int
  section_name          String?                @db.VarChar(255)
  status                Boolean                @default(true)
  created_by            String?
  created_at            DateTime               @default(now()) @db.Timestamp(0)
  updated_by            String?
  updated_at            DateTime?              @db.Timestamp(0)
  is_deleted            Boolean                @default(false)
  authorizations        mst_authorization[]
  departmentHeads       mst_department_head[]
  lines                 mst_line[]
  department            mst_department         @relation(fields: [department_id], references: [id], onDelete: Cascade)
  sectionHeads          mst_section_head[]
  sectionDepartmentAuth tr_authorization_doc[]
  documents             tr_document_number[]
  tr_handover           tr_handover[]
  section_department    tr_proposed_changes[]

  @@index([department_id], map: "mst_section_department_department_id_fkey")
}

model mst_document_categories {
  id                 Int                  @id @default(autoincrement())
  category           String?              @db.VarChar(255)
  status             Boolean?             @default(true)
  is_deleted         Int?                 @default(0)
  updated_at         DateTime?            @db.Timestamp(0)
  updated_by         String?
  additionalDocs     tr_additional_doc[]
  tr_document_number tr_document_number[]
}

model tr_document_number {
  id                   Int                      @id @default(autoincrement())
  running_number       String?                  @db.VarChar(255)
  klasifikasi_document String?                  @db.VarChar(255)
  category_id          Int?
  plant_id             Int
  area_id              Int?
  section_id           Int?
  auth_id              Int?
  line_code            String?                  @db.VarChar(255)
  section_code         String?                  @db.VarChar(255)
  department_code      String?                  @db.VarChar(255)
  development_code     String?                  @db.VarChar(255)
  id_proposed_header   String?                  @db.VarChar(255)
  sub_document         String?                  @db.VarChar(255)
  is_internal_memo     Boolean?
  is_surat_ketentuan   Boolean?
  created_by           String?                  @db.VarChar(255)
  created_date         DateTime?                @db.DateTime(0)
  area                 mst_area?                @relation(fields: [area_id], references: [id])
  authorization        mst_authorization?       @relation(fields: [auth_id], references: [id])
  category             mst_document_categories? @relation(fields: [category_id], references: [id])
  plant                mst_plant                @relation(fields: [plant_id], references: [id])
  section              mst_section_department?  @relation(fields: [section_id], references: [id])
  proposedChanges      tr_proposed_changes[]

  @@index([plant_id], map: "tr_document_number_plant_id_fkey")
  @@index([area_id], map: "tr_document_number_area_id_fkey")
  @@index([category_id], map: "tr_document_number_category_id_fkey")
  @@index([section_id], map: "tr_document_number_section_id_fkey")
  @@index([auth_id])
}

model tr_additional_doc {
  id                   Int                      @id @default(autoincrement())
  running_number       String?                  @db.VarChar(255)
  klasifikasi_document String?                  @db.VarChar(255)
  category_id          Int?
  plant_id             Int
  auth_id              Int?
  proposed_change_id   Int?
  line_code            String?                  @db.VarChar(255)
  section_code         String?                  @db.VarChar(255)
  department_code      String?                  @db.VarChar(255)
  development_code     String?                  @db.VarChar(255)
  id_proposed_header   String?                  @db.VarChar(255)
  sub_document         String?                  @db.VarChar(255)
  is_internal_memo     Boolean?
  is_surat_ketentuan   Boolean?
  created_by           String?                  @db.VarChar(255)
  created_date         DateTime?                @db.DateTime(0)
  authorization        mst_authorization?       @relation(fields: [auth_id], references: [id])
  category             mst_document_categories? @relation(fields: [category_id], references: [id])
  plantsite            mst_plant                @relation(fields: [plant_id], references: [id])
  proposedChange       tr_proposed_changes?     @relation(fields: [proposed_change_id], references: [id])
  document_versions    tr_additional_file[]

  @@index([id_proposed_header], map: "tr_proposed_changes_id")
  @@index([category_id], map: "tr_document_number_category_id_fkey")
  @@index([auth_id])
  @@index([proposed_change_id])
  @@index([plant_id], map: "tr_additional_doc_plant_id_fkey")
}

model tr_additional_file {
  id                   Int               @id @default(autoincrement())
  tr_additional_doc_id Int
  version              Int               @default(1)
  mimetype             String?           @db.VarChar(100)
  file                 String?           @db.VarChar(255)
  created_by           String?           @db.VarChar(255)
  created_date         DateTime?         @default(now()) @db.DateTime(0)
  updated_at           DateTime?         @updatedAt @db.Timestamp(0)
  updated_by           String?           @db.VarChar(255)
  is_deleted           Boolean           @default(false)
  document_versions    tr_additional_doc @relation(fields: [tr_additional_doc_id], references: [id], onDelete: Cascade)

  @@index([tr_additional_doc_id], map: "idx_document_version_doc_id")
  @@index([file], map: "idx_document_version_file")
}

model tr_proposed_changes_history {
  id                  Int                  @id @default(autoincrement())
  description         String?              @db.VarChar(255)
  employee_code       String?              @db.VarChar(255)
  proposed_changes_id Int?
  auth_id             Int?
  note                String?              @db.VarChar(255)
  status              String?              @db.VarChar(255)
  created_date        DateTime?            @db.DateTime(0)
  updated_date        DateTime?            @updatedAt @db.Timestamp(0)
  created_by          String?              @db.VarChar(255)
  authorization       mst_authorization?   @relation("AuthToProposedHistory", fields: [auth_id], references: [id])
  proposedChange      tr_proposed_changes? @relation(fields: [proposed_changes_id], references: [id], onDelete: Cascade)

  @@index([proposed_changes_id])
  @@index([auth_id])
  @@map("tr_proposed_changes_history")
}

model tr_proposed_changes_approval {
  id                  Int                  @id @default(autoincrement())
  proposed_changes_id Int?
  auth_id             Int?
  step                Int?
  actor               String?              @db.VarChar(255)
  employee_code       String?              @db.VarChar(255)
  status              String?              @db.VarChar(255)
  updated_date        DateTime?            @updatedAt @db.Timestamp(0)
  created_date        DateTime?            @db.DateTime(0)
  authorization       mst_authorization?   @relation("AuthToProposedApproval", fields: [auth_id], references: [id])
  proposedChange      tr_proposed_changes? @relation(fields: [proposed_changes_id], references: [id], onDelete: Cascade)

  @@index([proposed_changes_id])
  @@index([auth_id])
  @@map("tr_proposed_changes_approval")
}

model mst_authorization {
  id                                                  Int                            @id @default(autoincrement())
  employee_code                                       String?                        @db.VarChar(255)
  employee_name                                       String?                        @db.VarChar(255)
  email                                               String?                        @db.VarChar(255)
  number_phone                                        String?                        @db.VarChar(20)
  gender                                              Gender?                        @default(M)
  department_id                                       Int?
  section_id                                          Int?
  plant_id                                            Int?
  role_id                                             Int?
  status                                              Boolean?
  created_at                                          DateTime                       @default(now()) @db.Timestamp(0)
  created_by                                          String?
  updated_at                                          DateTime                       @default(now()) @updatedAt @db.Timestamp(0)
  updated_by                                          String?
  is_deleted                                          Boolean                        @default(false)
  department                                          mst_department?                @relation(fields: [department_id], references: [id])
  plant                                               mst_plant?                     @relation(fields: [plant_id], references: [id])
  role                                                mst_role?                      @relation(fields: [role_id], references: [id])
  section                                             mst_section_department?        @relation(fields: [section_id], references: [id])
  departmentHeads                                     mst_department_head[]
  sectionHeads                                        mst_section_head[]
  authorization                                       tr_additional_doc[]
  authdocApprovals                                    tr_authdoc_approval[]          @relation("AuthToAuthdocApproval")
  authdocHistories                                    tr_authdoc_history[]           @relation("AuthToAuthdocHistory")
  authorizationDocs                                   tr_authorization_doc[]
  documentNumbers                                     tr_document_number[]
  tr_handover_tr_handover_auth_idTomst_authorization  tr_handover[]                  @relation("tr_handover_auth_idTomst_authorization")
  tr_handover_tr_handover_auth_id5Tomst_authorization tr_handover[]                  @relation("tr_handover_auth_id5Tomst_authorization")
  tr_handover_tr_handover_auth_id2Tomst_authorization tr_handover[]                  @relation("tr_handover_auth_id2Tomst_authorization")
  tr_handover_tr_handover_auth_id3Tomst_authorization tr_handover[]                  @relation("tr_handover_auth_id3Tomst_authorization")
  tr_handover_tr_handover_auth_id4Tomst_authorization tr_handover[]                  @relation("tr_handover_auth_id4Tomst_authorization")
  tr_handover_approval                                tr_handover_approval[]
  tr_handover_history                                 tr_handover_history[]
  mainProposedChanges                                 tr_proposed_changes[]          @relation("AuthToProposedChanges")
  approvals                                           tr_proposed_changes_approval[] @relation("AuthToProposedApproval")
  historyproposedchanges                              tr_proposed_changes_history[]  @relation("AuthToProposedHistory")

  @@index([department_id], map: "mst_authorization_department_id_fkey")
  @@index([plant_id], map: "mst_authorization_plant_id_fkey")
  @@index([role_id], map: "mst_authorization_role_id_fkey")
  @@index([section_id], map: "mst_authorization_section_id_fkey")
  @@index([employee_code])
}

model tbl_support_document {
  id              Int                          @id @default(autoincrement())
  support_doc_id  Int?
  proposed_id     Int?
  document_type   String?                      @db.VarChar(255)
  title           String?                      @db.VarChar(255)
  status          Boolean?                     @default(false)
  created_by      String?                      @db.VarChar(255)
  created_date    DateTime?                    @db.DateTime(0)
  updated_at      DateTime?                    @updatedAt @db.Timestamp(0)
  updated_by      String?                      @db.VarChar(255)
  is_deleted      Boolean                      @default(false)
  proposedChange  tr_proposed_changes?         @relation(fields: [proposed_id], references: [id], onDelete: Cascade)
  supportDocument mst_support_document?        @relation(fields: [support_doc_id], references: [id], onDelete: Cascade)
  fileVersions    tbl_support_document_file[]
  notedVersions   tbl_support_document_noted[]

  @@index([support_doc_id])
  @@index([proposed_id])
  @@map("tbl_support_document")
}

model tbl_support_document_noted {
  id              Int                  @id @default(autoincrement())
  support_doc_id  Int
  version         Int                  @default(1)
  noted           String?              @db.Text
  status          Boolean?             @default(false)
  created_by      String?              @db.VarChar(255)
  created_date    DateTime?            @db.DateTime(0)
  updated_at      DateTime?            @updatedAt @db.Timestamp(0)
  updated_by      String?              @db.VarChar(255)
  is_deleted      Boolean              @default(false)
  supportDocument tbl_support_document @relation(fields: [support_doc_id], references: [id], onDelete: Cascade)

  @@unique([support_doc_id, version])
  @@map("tbl_support_document_noted")
}

model tbl_support_document_file {
  id              Int                  @id @default(autoincrement())
  support_doc_id  Int
  version         Int                  @default(1)
  file            String?              @db.VarChar(255)
  status          Boolean?             @default(false)
  created_by      String?              @db.VarChar(255)
  created_date    DateTime?            @db.DateTime(0)
  updated_at      DateTime?            @updatedAt @db.Timestamp(0)
  updated_by      String?              @db.VarChar(255)
  is_deleted      Boolean              @default(false)
  supportDocument tbl_support_document @relation(fields: [support_doc_id], references: [id], onDelete: Cascade)

  @@unique([support_doc_id, version])
  @@map("tbl_support_document_file")
}

model mst_support_document {
  id              Int                    @id @default(autoincrement())
  document_type   String?                @db.VarChar(255)
  status          Boolean?               @default(true)
  is_deleted      Int?                   @default(0)
  updated_at      DateTime?              @db.Timestamp(0)
  updated_by      String?
  supportDocument tbl_support_document[]
}

model tr_authorization_doc {
  id                     Int                      @id @default(autoincrement())
  proposed_change_id     Int?
  doc_number             String?                  @db.VarChar(255)
  implementation_date    DateTime?                @db.Date
  evaluation             String?                  @db.Text
  description            String?                  @db.Text
  conclution             String?                  @db.Text
  concept                String?                  @db.VarChar(255)
  standart               String?                  @db.Text
  method                 String?                  @db.VarChar(255)
  status                 String?                  @db.Text
  progress               String?                  @db.VarChar(255)
  created_by             String?                  @db.VarChar(255)
  auth_id                Int?
  plant_id               Int?
  created_date           DateTime?                @db.DateTime(0)
  department_id          Int?
  section_department_id  Int?
  updated_at             DateTime?                @db.Timestamp(0)
  email_tracking_authdoc email_tracking_authdoc[]
  authdocApprovals       tr_authdoc_approval[]    @relation("DocToAuthdocApproval")
  authdocHistories       tr_authdoc_history[]     @relation("DocToAuthdocHistory")
  authdocMembers         tr_authdoc_member[]      @relation("DocToAuthdocMember")
  authorization          mst_authorization?       @relation(fields: [auth_id], references: [id])
  department             mst_department?          @relation(fields: [department_id], references: [id])
  authorizationPlant     mst_plant?               @relation(fields: [plant_id], references: [id])
  proposedChange         tr_proposed_changes?     @relation(fields: [proposed_change_id], references: [id])
  section_department     mst_section_department?  @relation(fields: [section_department_id], references: [id])
  tr_handover            tr_handover[]

  @@index([proposed_change_id], map: "tr_additional_doc_proposed_change_id_fkey")
  @@index([auth_id], map: "tr_additional_doc_auth_id_fkey")
  @@index([plant_id], map: "tr_additional_doc_plant_id_fkey")
  @@index([department_id], map: "tr_additional_doc_department_id_fkey")
  @@index([section_department_id], map: "tr_additional_doc_section_department_id_fkey")
}

model tr_authdoc_approval {
  id                Int                   @id @default(autoincrement())
  authdoc_id        Int?
  auth_id           Int?
  step              Int?
  actor             String?               @db.VarChar(255)
  employee_code     String?               @db.VarChar(255)
  status            String?               @db.VarChar(255)
  updated_date      DateTime?             @updatedAt @db.Timestamp(0)
  created_date      DateTime?             @db.DateTime(0)
  authorization     mst_authorization?    @relation("AuthToAuthdocApproval", fields: [auth_id], references: [id])
  authorization_doc tr_authorization_doc? @relation("DocToAuthdocApproval", fields: [authdoc_id], references: [id])

  @@index([authdoc_id])
  @@index([auth_id])
}

model tr_proposed_changes {
  id                             Int                              @id @default(autoincrement())
  project_name                   String?                          @db.VarChar(255)
  document_number_id             Int?
  item_changes                   String?                          @db.VarChar(255)
  line_code                      String?                          @db.VarChar(255)
  section_code                   String?                          @db.VarChar(255)
  section_name                   String?                          @db.VarChar(255)
  department_id                  Int?
  section_department_id          Int?
  plant_id                       Int?
  auth_id                        Int?
  change_type                    String?                          @db.VarChar(255)
  description                    String?                          @db.Text
  reason                         String?                          @db.Text
  cost                           String?                          @db.VarChar(255)
  cost_text                      String?                          @db.VarChar(255)
  planning_start                 DateTime?                        @db.Date
  planning_end                   DateTime?                        @db.Date
  created_date                   DateTime?                        @db.DateTime(0)
  created_by                     String?                          @db.VarChar(255)
  updated_at                     DateTime?                        @updatedAt @db.Timestamp(0)
  need_engineering_approval      Boolean?
  need_production_approval       Boolean?
  other_sytem                    String?                          @db.VarChar(255)
  status                         String?                          @default("submitted") @db.VarChar(255)
  progress                       String?                          @db.VarChar(255)
  progresssupport                String?                          @default("0%") @db.VarChar(255)

  is_deleted                     Boolean                          @default(false)
  email_tracking_proposedchanges email_tracking_proposedchanges[]
  proposedChange                 tbl_support_document[]
  additionalDocs                 tr_additional_doc[]
  authorizationDocs              tr_authorization_doc[]
  tr_handover                    tr_handover[]
  mainProposedChanges            mst_authorization?               @relation("AuthToProposedChanges", fields: [auth_id], references: [id])
  department                     mst_department?                  @relation(fields: [department_id], references: [id])
  documentNumber                 tr_document_number?              @relation(fields: [document_number_id], references: [id])
  plant                          mst_plant?                       @relation(fields: [plant_id], references: [id])
  section_department             mst_section_department?          @relation(fields: [section_department_id], references: [id])
  approvals                      tr_proposed_changes_approval[]
  changeHistories                tr_proposed_changes_history[]

  @@index([plant_id], map: "tr_proposed_changes_plant_id_fkey")
  @@index([department_id], map: "tr_proposed_changes_department_id_fkey")
  @@index([section_department_id], map: "tr_proposed_changes_section_department_id_fkey")
  @@index([document_number_id], map: "tr_proposed_changes_document_number_id_fkey")
  @@index([auth_id])
}

model tr_authdoc_history {
  id                Int                   @id @default(autoincrement())
  description       String?               @db.VarChar(255)
  employee_code     String?               @db.VarChar(255)
  authdoc_id        Int?
  auth_id           Int?
  note              String?               @db.VarChar(255)
  status            String?               @db.VarChar(255)
  created_date      DateTime?             @db.DateTime(0)
  updated_date      DateTime?             @updatedAt @db.Timestamp(0)
  created_by        String?               @db.VarChar(255)
  authorization     mst_authorization?    @relation("AuthToAuthdocHistory", fields: [auth_id], references: [id])
  authorization_doc tr_authorization_doc? @relation("DocToAuthdocHistory", fields: [authdoc_id], references: [id])

  @@index([authdoc_id])
  @@index([auth_id])
}

model tr_authdoc_member {
  id                Int                   @id @default(autoincrement())
  authdoc_id        Int?
  employee_code     String?               @db.VarChar(255)
  employee_name     String?               @db.VarChar(255)
  status            String?               @db.VarChar(255)
  created_date      DateTime?             @db.DateTime(0)
  is_deleted        Boolean
  authorization_doc tr_authorization_doc? @relation("DocToAuthdocMember", fields: [authdoc_id], references: [id])

  @@index([authdoc_id])
}

model tr_handover {
  id                                                        Int                       @id @default(autoincrement())
  doc_number                                                String?                   @db.VarChar(255)
  auth_id                                                   Int?
  auth_id2                                                  Int?
  auth_id3                                                  Int?
  auth_id4                                                  Int?
  auth_id5                                                  Int?
  proposed_change_id                                        Int?
  authdoc_id                                                Int?
  plant_id                                                  Int?
  department_id                                             Int?
  section_department_id                                     Int?
  progress                                                  String?                   @db.VarChar(255)
  status                                                    String?                   @db.VarChar(255)
  material                                                  String?                   @db.Text
  remark                                                    String?                   @db.Text
  created_by                                                String?                   @db.VarChar(255)
  created_date                                              DateTime?                 @db.DateTime(0)
  updated_at                                                DateTime?                 @db.DateTime(0)
  updated_by                                                String?                   @db.VarChar(255)
  is_deleted                                                Boolean?                  @default(false)
  star                                                      Int?                     // ⭐️ nilai agregat atau akhir rating

  email_tracking_handover                                   email_tracking_handover[]
  mst_authorization_tr_handover_auth_idTomst_authorization  mst_authorization?        @relation("tr_handover_auth_idTomst_authorization", fields: [auth_id], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_1")
  mst_authorization_tr_handover_auth_id5Tomst_authorization mst_authorization?        @relation("tr_handover_auth_id5Tomst_authorization", fields: [auth_id5], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_10")
  mst_authorization_tr_handover_auth_id2Tomst_authorization mst_authorization?        @relation("tr_handover_auth_id2Tomst_authorization", fields: [auth_id2], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_2")
  mst_authorization_tr_handover_auth_id3Tomst_authorization mst_authorization?        @relation("tr_handover_auth_id3Tomst_authorization", fields: [auth_id3], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_3")
  mst_authorization_tr_handover_auth_id4Tomst_authorization mst_authorization?        @relation("tr_handover_auth_id4Tomst_authorization", fields: [auth_id4], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_4")
  tr_proposed_changes                                       tr_proposed_changes?      @relation(fields: [proposed_change_id], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_5")
  tr_authorization_doc                                      tr_authorization_doc?     @relation(fields: [authdoc_id], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_6")
  mst_plant                                                 mst_plant?                @relation(fields: [plant_id], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_7")
  mst_department                                            mst_department?           @relation(fields: [department_id], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_8")
  mst_section_department                                    mst_section_department?   @relation(fields: [section_department_id], references: [id], onUpdate: NoAction, map: "tr_handover_ibfk_9")
  tr_handover_approval                                      tr_handover_approval[]
  tr_handover_history                                       tr_handover_history[]

  @@index([auth_id], map: "auth_id")
  @@index([auth_id2], map: "auth_id2")
  @@index([auth_id3], map: "auth_id3")
  @@index([auth_id4], map: "auth_id4")
  @@index([authdoc_id], map: "authdoc_id")
  @@index([department_id], map: "department_id")
  @@index([plant_id], map: "plant_id")
  @@index([proposed_change_id], map: "proposed_change_id")
  @@index([section_department_id], map: "section_department_id")
  @@index([auth_id5], map: "auth_id5")
}

model tr_handover_approval {
  id                Int                @id @default(autoincrement())
  handover_id       Int?
  auth_id           Int?
  step              Int?
  actor             String?            @db.VarChar(255)
  employee_code     String?            @db.VarChar(255)
  status            String?            @db.VarChar(255)
  updated_date      DateTime?          @db.DateTime(0)
  created_date      DateTime?          @db.DateTime(0)
  tr_handover       tr_handover?       @relation(fields: [handover_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "tr_handover_approval_ibfk_1")
  mst_authorization mst_authorization? @relation(fields: [auth_id], references: [id], onUpdate: NoAction, map: "tr_handover_approval_ibfk_2")

  @@index([auth_id], map: "auth_id")
  @@index([handover_id], map: "handover_id")
}

model tr_handover_history {
  id                Int                @id @default(autoincrement())
  description       String?            @db.VarChar(255)
  employee_code     String?            @db.VarChar(255)
  handover_id       Int?
  auth_id           Int?
  note              String?            @db.VarChar(255)
  status            String?            @db.VarChar(255)
  created_date      DateTime?          @db.DateTime(0)
  updated_date      DateTime?          @db.DateTime(0)
  created_by        String?            @db.VarChar(255)
  tr_handover       tr_handover?       @relation(fields: [handover_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "tr_handover_history_ibfk_1")
  mst_authorization mst_authorization? @relation(fields: [auth_id], references: [id], onUpdate: NoAction, map: "tr_handover_history_ibfk_2")

  @@index([auth_id], map: "auth_id")
  @@index([handover_id], map: "handover_id")
}

model email_tracking_handover {
  id              Int                                    @id @default(autoincrement())
  handover_id     Int
  recipient_email String                                 @db.VarChar(255)
  recipient_type  email_tracking_handover_recipient_type
  status          email_tracking_handover_status
  note_hash       String                                 @db.VarChar(100)
  note_text       String?                                @db.Text
  message_id      String?                                @db.VarChar(255)
  sent_at         DateTime?                              @db.Timestamp(0)
  is_success      Boolean?                               @default(false)
  retry_count     Int?                                   @default(0)
  last_retry_at   DateTime?                              @db.Timestamp(0)
  created_at      DateTime?                              @default(now()) @db.Timestamp(0)
  tr_handover     tr_handover                            @relation(fields: [handover_id], references: [id], onDelete: Cascade, map: "fk_tracking_handover")

  @@index([handover_id, recipient_email, recipient_type, status, note_hash], map: "idx_email_tracking_lookup")
  @@index([is_success, retry_count, last_retry_at], map: "idx_email_tracking_retry")
}

model email_tracking_proposedchanges {
  id                  Int                                           @id @default(autoincrement())
  proposed_changes_id Int
  recipient_email     String                                        @db.VarChar(255)
  recipient_type      email_tracking_proposedchanges_recipient_type
  status              email_tracking_proposedchanges_status
  note_hash           String                                        @db.VarChar(100)
  note_text           String?                                       @db.Text
  message_id          String?                                       @db.VarChar(255)
  sent_at             DateTime?                                     @db.Timestamp(0)
  is_success          Boolean?                                      @default(false)
  retry_count         Int?                                          @default(0)
  last_retry_at       DateTime?                                     @db.Timestamp(0)
  created_at          DateTime?                                     @default(now()) @db.Timestamp(0)
  tr_proposed_changes tr_proposed_changes                           @relation(fields: [proposed_changes_id], references: [id], onDelete: Cascade, map: "fk_tracking_proposed_changes")

  @@index([proposed_changes_id, recipient_email, recipient_type, status, note_hash], map: "idx_email_tracking_lookup")
  @@index([is_success, retry_count, last_retry_at], map: "idx_email_tracking_retry")
}

model email_tracking_authdoc {
  id                   Int                                   @id @default(autoincrement())
  authorization_doc_id Int
  recipient_email      String                                @db.VarChar(255)
  recipient_type       email_tracking_authdoc_recipient_type
  status               email_tracking_authdoc_status
  note_hash            String                                @db.VarChar(100)
  note_text            String?                               @db.Text
  message_id           String?                               @db.VarChar(255)
  sent_at              DateTime?                             @db.Timestamp(0)
  is_success           Boolean?                              @default(false)
  retry_count          Int?                                  @default(0)
  last_retry_at        DateTime?                             @db.Timestamp(0)
  created_at           DateTime?                             @default(now()) @db.Timestamp(0)
  tr_authorization_doc tr_authorization_doc                  @relation(fields: [authorization_doc_id], references: [id], onDelete: Cascade, map: "fk_tracking_authdoc")

  @@index([authorization_doc_id, recipient_email, recipient_type, status, note_hash], map: "idx_email_tracking_lookup")
  @@index([is_success, retry_count, last_retry_at], map: "idx_email_tracking_retry")
}

enum Gender {
  M
  F
}

enum email_tracking_proposedchanges_recipient_type {
  submitter
  approver
  next_approver
}

enum email_tracking_proposedchanges_status {
  approved
  not_approved
  rejected
}

enum email_tracking_authdoc_recipient_type {
  submitter
  approver
  next_approver
}

enum email_tracking_handover_recipient_type {
  submitter
  approver
  next_approver
}

enum email_tracking_authdoc_status {
  approved
  not_approved
  rejected
}

enum email_tracking_handover_status {
  approved
  not_approved
  rejected
}
